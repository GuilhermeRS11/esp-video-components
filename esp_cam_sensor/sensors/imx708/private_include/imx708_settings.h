/*
 * SPDX-FileCopyrightText: 2024 Espressif Systems (Shanghai) CO LTD
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#pragma once

#include "imx708_types.h"
#include "imx708_regs.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Common registers for all modes */
static const imx708_reginfo_t imx708_init_reg_tbl[] = {
    {0x0100, 0x00},  // Standby mode
    {0x0136, 0x18},  // EXCK_FREQ
    {0x0137, 0x00},  // EXCK_FREQ
    {0x33F0, 0x02},  // ADBIT_CTRL
    {0x33F1, 0x05},  // ADBIT_CTRL
    {0x3062, 0x00},  // MIPI settings
    {0x3063, 0x12},
    {0x3068, 0x00},
    {0x3069, 0x12},
    {0x306A, 0x00},
    {0x306B, 0x30},
    {0x3076, 0x00},
    {0x3077, 0x30},
    {0x3078, 0x00},
    {0x3079, 0x30},
    {0x5E54, 0x0C},  // EXPOSURE_CTRL
    {0x6E44, 0x00},  // MIPI_CTRL
    {0xB0B6, 0x01},  // MIPI_CTRL
    {0xE829, 0x00},  // PDAF settings
    {0xF001, 0x08},
    {0xF003, 0x08},
    {0xF00D, 0x10},
    {0xF00F, 0x10},
    {0xF031, 0x08},
    {0xF033, 0x08},
    {0xF03D, 0x10},
    {0xF03F, 0x10},
    {0x0112, 0x0A},  // CSI_DT_FMT
    {0x0113, 0x0A},  // CSI_DT_FMT
    {0x0114, 0x01},  // CSI_LANE_MODE (2-lane)
    {0x0B8E, 0x01},  // Color correction
    {0x0B8F, 0x00},
    {0x0B94, 0x01},
    {0x0B95, 0x00},
    {0x3400, 0x01},  // Sensor control
    {0x3478, 0x01},
    {0x3479, 0x1c},
    {0x3091, 0x01},
    {0x3092, 0x00},
    {0x3419, 0x00},
    {0xBCF1, 0x02},
    {0x3094, 0x01},
    {0x3095, 0x01},
    {0x3362, 0x00},
    {0x3363, 0x00},
    {0x3364, 0x00},
    {0x3365, 0x00},
    {0x0138, 0x01},  // OP_MODE
    {IMX708_REG_END, 0x00}
};

/* Full resolution 4608x2592 10-bit mode */
static const imx708_reginfo_t imx708_4608x2592_regs[] = {
    {0x0342, 0x3D},  // LINE_LENGTH_PCK
    {0x0343, 0x20},
    {0x0340, 0x0A},  // FRM_LENGTH_LINES
    {0x0341, 0x59},
    {0x0344, 0x00},  // X_ADDR_START
    {0x0345, 0x00},
    {0x0346, 0x00},  // Y_ADDR_START
    {0x0347, 0x00},
    {0x0348, 0x11},  // X_ADDR_END
    {0x0349, 0xFF},
    {0x034A, 0x0A},  // Y_ADDR_END
    {0x034B, 0x1F},
    {0x0220, 0x62},  // DIGITAL_CROP
    {0x0222, 0x01},
    {0x0900, 0x00},  // BINNING_MODE
    {0x0901, 0x11},  // BINNING_TYPE
    {0x0902, 0x0A},  // BINNING_WEIGHTING
    {0x3200, 0x01},  // SCALING_MODE
    {0x3201, 0x01},
    {0x32D5, 0x01},
    {0x32D6, 0x00},
    {0x32DB, 0x01},
    {0x32DF, 0x00},
    {0x350C, 0x00},  // DIG_CROP
    {0x350D, 0x00},
    {0x0408, 0x00},  // DIG_CROP_X_OFFSET
    {0x0409, 0x00},
    {0x040A, 0x00},  // DIG_CROP_Y_OFFSET
    {0x040B, 0x00},
    {0x040C, 0x12},  // DIG_CROP_IMAGE_WIDTH
    {0x040D, 0x00},
    {0x040E, 0x0A},  // DIG_CROP_IMAGE_HEIGHT
    {0x040F, 0x20},
    {0x034C, 0x12},  // X_OUTPUT_SIZE
    {0x034D, 0x00},
    {0x034E, 0x0A},  // Y_OUTPUT_SIZE
    {0x034F, 0x20},
    {0x0301, 0x05},  // VTPXCK_DIV
    {0x0303, 0x02},  // VTSYCK_DIV
    {0x0305, 0x02},  // PREPLLCK_VT_DIV
    {0x0306, 0x00},  // PLL_VT_MPY
    {0x0307, 0x7C},
    {0x030B, 0x02},  // OPSYCK_DIV
    {0x030D, 0x04},  // OPPXCK_DIV
    {0x0310, 0x01},  // PLL_MULT_DRV
    {0x3CA0, 0x00},  // PDAF settings
    {0x3CA1, 0x64},
    {0x3CA4, 0x00},
    {0x3CA5, 0x00},
    {0x3CA6, 0x00},
    {0x3CA7, 0x00},
    {0x3CAA, 0x00},
    {0x3CAB, 0x00},
    {0x3CB8, 0x00},
    {0x3CB9, 0x08},
    {0x3CBA, 0x00},
    {0x3CBB, 0x00},
    {0x3CBC, 0x00},
    {0x3CBD, 0x3C},
    {0x3CBE, 0x00},
    {0x3CBF, 0x00},
    {0x0202, 0x0A},  // COARSE_INTEGRATION_TIME
    {0x0203, 0x29},
    {0x0224, 0x01},  // SHORT_INTEGRATION_TIME
    {0x0225, 0xF4},
    {0x3116, 0x01},  // MID_INTEGRATION_TIME
    {0x3117, 0xF4},
    {0x0204, 0x00},  // ANALOG_GAIN_CODE_GLOBAL
    {0x0205, 0x00},
    {0x0216, 0x00},  // SHORT_ANALOG_GAIN_CODE_GLOBAL
    {0x0217, 0x00},
    {0x0218, 0x01},
    {0x0219, 0x00},
    {0x020E, 0x01},  // DIGITAL_GAIN_GLOBAL
    {0x020F, 0x00},
    {0x3118, 0x00},  // MID_ANALOG_GAIN_CODE_GLOBAL
    {0x3119, 0x00},
    {0x311A, 0x01},
    {0x311B, 0x00},
    {0x341a, 0x00},  // QBC settings
    {0x341b, 0x00},
    {0x341c, 0x00},
    {0x341d, 0x00},
    {0x341e, 0x01},
    {0x341f, 0x20},
    {0x3420, 0x00},
    {0x3421, 0xd8},
    {0x3366, 0x00},
    {IMX708_REG_END, 0x00}
};

/* 2x2 binned mode 2304x1296 */
static const imx708_reginfo_t imx708_2304x1296_regs[] = {
    {0x0342, 0x31},  // LINE_LENGTH_PCK
    {0x0343, 0xC4},
    {0x0340, 0x08},  // FRM_LENGTH_LINES
    {0x0341, 0x6A},
    {0x0344, 0x00},  // X_ADDR_START
    {0x0345, 0x00},
    {0x0346, 0x00},  // Y_ADDR_START
    {0x0347, 0x00},
    {0x0348, 0x11},  // X_ADDR_END
    {0x0349, 0xFF},
    {0x034A, 0x0A},  // Y_ADDR_END
    {0x034B, 0x1F},
    {0x0220, 0x62},
    {0x0222, 0x01},
    {0x0900, 0x01},  // BINNING_MODE (enabled)
    {0x0901, 0x22},  // BINNING_TYPE (2x2)
    {0x0902, 0x0A},
    {0x3200, 0x43},  // SCALING_MODE
    {0x3201, 0x43},
    {0x32D5, 0x43},
    {0x32D6, 0x00},
    {0x32DB, 0x01},
    {0x32DF, 0x00},
    {0x350C, 0x00},
    {0x350D, 0x00},
    {0x0408, 0x00},
    {0x0409, 0x00},
    {0x040A, 0x00},
    {0x040B, 0x00},
    {0x040C, 0x09},  // DIG_CROP_IMAGE_WIDTH
    {0x040D, 0x00},
    {0x040E, 0x05},  // DIG_CROP_IMAGE_HEIGHT
    {0x040F, 0x10},
    {0x034C, 0x09},  // X_OUTPUT_SIZE
    {0x034D, 0x00},
    {0x034E, 0x05},  // Y_OUTPUT_SIZE
    {0x034F, 0x10},
    {0x0301, 0x05},
    {0x0303, 0x02},
    {0x0305, 0x02},
    {0x0306, 0x00},
    {0x0307, 0x7C},
    {0x030B, 0x02},
    {0x030D, 0x04},
    {0x0310, 0x01},
    {0x0202, 0x08},  // COARSE_INTEGRATION_TIME
    {0x0203, 0x3A},
    {0x0204, 0x00},  // ANALOG_GAIN_CODE_GLOBAL
    {0x0205, 0x00},
    {0x020E, 0x01},  // DIGITAL_GAIN_GLOBAL
    {0x020F, 0x00},
    {IMX708_REG_END, 0x00}
};

/* 720p mode 1280x720 */
static const imx708_reginfo_t imx708_1280x720_regs[] = {
    {0x0342, 0x31},  // LINE_LENGTH_PCK
    {0x0343, 0xC4},
    {0x0340, 0x05},  // FRM_LENGTH_LINES
    {0x0341, 0xDC},
    {0x0344, 0x06},  // X_ADDR_START (fine adjustment right)
    {0x0345, 0x00},
    {0x0346, 0x01},  // Y_ADDR_START (centered crop)
    {0x0347, 0x68},
    {0x0348, 0x0F},  // X_ADDR_END (fine adjustment right)
    {0x0349, 0xFF},
    {0x034A, 0x08},  // Y_ADDR_END
    {0x034B, 0xB7},
    {0x0220, 0x62},
    {0x0222, 0x01},
    {0x0900, 0x01},  // BINNING_MODE
    {0x0901, 0x22},  // BINNING_TYPE (2x2)
    {0x0902, 0x0A},
    {0x3200, 0x43},
    {0x3201, 0x43},
    {0x32D5, 0x43},
    {0x32D6, 0x00},
    {0x32DB, 0x01},
    {0x32DF, 0x00},
    {0x350C, 0x00},
    {0x350D, 0x00},
    {0x0408, 0x00},
    {0x0409, 0x00},
    {0x040A, 0x00},
    {0x040B, 0x00},
    {0x040C, 0x05},  // DIG_CROP_IMAGE_WIDTH
    {0x040D, 0x00},
    {0x040E, 0x02},  // DIG_CROP_IMAGE_HEIGHT
    {0x040F, 0xD0},
    {0x034C, 0x05},  // X_OUTPUT_SIZE
    {0x034D, 0x00},
    {0x034E, 0x02},  // Y_OUTPUT_SIZE
    {0x034F, 0xD0},
    {0x0301, 0x05},
    {0x0303, 0x02},
    {0x0305, 0x02},
    {0x0306, 0x00},
    {0x0307, 0x7C},
    {0x030B, 0x02},
    {0x030D, 0x04},
    {0x0310, 0x01},
    {0x0202, 0x05},  // COARSE_INTEGRATION_TIME
    {0x0203, 0xAC},
    {0x0204, 0x00},  // ANALOG_GAIN_CODE_GLOBAL
    {0x0205, 0x00},
    {0x020E, 0x01},  // DIGITAL_GAIN_GLOBAL
    {0x020F, 0x00},
    {IMX708_REG_END, 0x00}
};

/* Custom 800x640 @ 15fps configuration */
static const imx708_reginfo_t imx708_800x640_regs[] = {
    {0x0342, 0x2F},  // LINE_LENGTH_PCK - Adjusted for centered crop: 12000
    {0x0343, 0x00},
    {0x0340, 0x0C},  // FRM_LENGTH_LINES - tuned for 15fps with long exposure support: 3296
    {0x0341, 0xE0},
    // Move ROI 4x to the right from current (+64 pre-bin â‰ˆ +32 px at 800p)
    {0x0344, 0x07},  // X_ADDR_START -> 0x0730 (1840)
    {0x0345, 0x30},
    {0x0346, 0x02},  // Y_ADDR_START - Centered crop start: 656  
    {0x0347, 0x90},
    {0x0348, 0x0D},  // X_ADDR_END  -> 0x0D6F (3439) keeps width 1600
    {0x0349, 0x6F},
    {0x034A, 0x07},  // Y_ADDR_END - Centered crop end: 1935
    {0x034B, 0x8F},
    {0x0220, 0x62},
    {0x0222, 0x01},
    {0x0900, 0x01},  // BINNING_MODE
    {0x0901, 0x22},  // BINNING_TYPE (2x2)
    {0x0902, 0x0A},
    {0x3200, 0x43},
    {0x3201, 0x43},
    {0x32D5, 0x43},
    {0x32D6, 0x00},
    {0x32DB, 0x01},
    {0x32DF, 0x00},
    {0x350C, 0x00},
    {0x350D, 0x00},
    {0x0408, 0x00},  // DIG_CROP_X_OFFSET
    {0x0409, 0x00},
    {0x040A, 0x00},  // DIG_CROP_Y_OFFSET
    {0x040B, 0x00},
    {0x040C, 0x03},  // DIG_CROP_IMAGE_WIDTH (800)
    {0x040D, 0x20},
    {0x040E, 0x02},  // DIG_CROP_IMAGE_HEIGHT (640)
    {0x040F, 0x80},
    {0x034C, 0x03},  // X_OUTPUT_SIZE (800)
    {0x034D, 0x20},
    {0x034E, 0x02},  // Y_OUTPUT_SIZE (640)
    {0x034F, 0x80},
    {0x0301, 0x05},  // VTPXCK_DIV
    {0x0303, 0x02},  // VTSYCK_DIV
    {0x0305, 0x02},  // PREPLLCK_VT_DIV
    {0x0306, 0x00},  // PLL_VT_MPY
    {0x0307, 0x7C},
    {0x030B, 0x02},  // OPSYCK_DIV
    {0x030D, 0x04},  // OPPXCK_DIV
    {0x0310, 0x01},  // PLL_MULTI_DRV
    {0x0202, 0x07},  // COARSE_INTEGRATION_TIME - Adjusted for 15fps
    {0x0203, 0xD0},
    {0x0204, 0x00},  // ANALOG_GAIN_CODE_GLOBAL
    {0x0205, 0x00},
    {0x020E, 0x01},  // DIGITAL_GAIN_GLOBAL
    {0x020F, 0x00},
    {IMX708_REG_END, 0x00}
};

/* Link frequency settings for 450MHz */
static const imx708_reginfo_t imx708_link_freq_450mhz[] = {
    {0x030E, 0x01},
    {0x030F, 0x2C},
    {IMX708_REG_END, 0x00}
};

/* Link frequency settings for 447MHz */
static const imx708_reginfo_t imx708_link_freq_447mhz[] = {
    {0x030E, 0x01},
    {0x030F, 0x2A},
    {IMX708_REG_END, 0x00}
};

/* Link frequency settings for 453MHz */
static const imx708_reginfo_t imx708_link_freq_453mhz[] = {
    {0x030E, 0x01},
    {0x030F, 0x2E},
    {IMX708_REG_END, 0x00}
};

#ifdef __cplusplus
}
#endif

